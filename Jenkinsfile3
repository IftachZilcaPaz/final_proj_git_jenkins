pipeline {
    agent any

    environment {
        // Define the image name here for reuse in the pipeline
        IMAGE_NAME = "iftachzilka7/myhtmlapp:${env.BUILD_ID}"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', 
                    credentialsId: 'Jenkins_git', 
                    url: 'https://github.com/IftachZilcaPaz/final_proj_git_jenkins.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build(IMAGE_NAME)
                }
            }
        }

        stage('Push Image') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'Docker') {
                        dockerImage.push("${env.BUILD_ID}")
                        dockerImage.push("latest")
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            agent {
                kubernetes {
                    // Specify the particular pod template to use
                    yaml '''
                        apiVersion: apps/v1
                        kind: Deployment
                        metadata:
                          name: myhtmlapp
                          namespace: jenkins
                        spec:
                          replicas: 2
                          selector:
                            matchLabels:
                            app: myhtmlapp
                          template:
                            metadata:
                              labels:
                                app: myhtmlapp
                            spec:
                              containers:
                              - name: myhtmlapp
                                image: iftachzilka7/myhtmlapp:${BUILD_ID} # Replace with your image
                                ports:
                                - containerPort: 80
                        '''        
                }
            }
            steps {
                script {
                    // Your deployment commands here
                    sh 'kubectl apply -f k8s/deployment.yaml --validate=false'
                }
            }
    }

    post {
        always {
            cleanWs()
        }
    }
}
